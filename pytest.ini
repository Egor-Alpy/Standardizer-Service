[tool:pytest]
# Конфигурация pytest для сервиса стандартизации атрибутов

# Минимальная версия pytest
minversion = 7.0

# Директория с тестами
testpaths = tests

# Паттерны для поиска тестовых файлов
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Маркеры для категоризации тестов
markers =
    unit: Юнит-тесты (быстрые тесты отдельных компонентов)
    integration: Интеграционные тесты (требуют внешние зависимости)
    slow: Медленные тесты
    database: Тесты, требующие подключения к базе данных
    api: Тесты API эндпоинтов
    standardization: Тесты логики стандартизации
    repositories: Тесты репозиториев
    utils: Тесты утилит

# Настройки вывода
addopts =
    -v
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --color=yes
    --durations=10
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80

# Игнорируемые предупреждения
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Настройки для асинхронных тестов
asyncio_mode = auto

# Логирование в тестах
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Настройки покрытия кода
[coverage:run]
source = app
omit =
    */tests/*
    */venv/*
    */virtualenv/*
    */__pycache__/*
    */migrations/*
    */alembic/*
    */conftest.py
    */settings/*
    */config/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = Покрытие кода - Сервис стандартизации атрибутов
