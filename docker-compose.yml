version: '3.8'

services:
  # Redis для координации
  redis:
    image: redis:7-alpine
    ports:
      - "6378:6379"
    volumes:
      - redis_data:/data
    networks:
      - tender-services

  # API сервис
  api:
    container_name: standardizer-service
    build: .
    ports:
      - "8001:8000"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379
      # Прокси настройки (если указаны в .env)
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
      - SOCKS_PROXY=${SOCKS_PROXY}
      - NO_PROXY=localhost,127.0.0.1,redis
    networks:
      - tender-services
    depends_on:
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./src/data:/app/src/data:ro  # Монтируем файл стандартов
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000

  # Воркер стандартизации
  standardization-worker:
    build: .
    env_file:
      - .env
    environment:
      - WORKER_ID=std_worker_1
      - REDIS_URL=redis://redis:6379
      - STANDARDIZATION_BATCH_SIZE=5
      - RATE_LIMIT_DELAY=5
      - MAX_RETRIES=5
      - ENABLE_PROMPT_CACHING=true
      - CACHE_TTL_TYPE=5m
      # Прокси настройки (если указаны в .env)
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
      - SOCKS_PROXY=${SOCKS_PROXY}
      - NO_PROXY=localhost,127.0.0.1,redis
    depends_on:
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./src/data:/app/src/data:ro
    network_mode: "host"
    # command: python -m src.workers.standardization_worker --worker-id std_worker_1
    # НА ЭТУ:
    command: tail -f /dev/null  # Держит контейнер запущенным без работы

  # Второй воркер (опционально)
  standardization-worker-2:
    build: .
    env_file:
      - .env
    environment:
      - WORKER_ID=std_worker_2
      - REDIS_URL=redis://redis:6379
      - STANDARDIZATION_BATCH_SIZE=50
      - RATE_LIMIT_DELAY=10
      - MAX_RETRIES=3
      - ENABLE_PROMPT_CACHING=true
      - CACHE_TTL_TYPE=5m
      # Прокси настройки
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTPS_PROXY}
      - SOCKS_PROXY=${SOCKS_PROXY}
      - NO_PROXY=localhost,127.0.0.1,redis
    depends_on:
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./src/data:/app/src/data:ro
    command: python -m src.workers.standardization_worker --worker-id std_worker_2
    profiles:
      - scale  # Запускается только при docker-compose --profile scale up
    networks:
      - tender-services


volumes:
  redis_data:

networks:
  tender-services:
    external: true